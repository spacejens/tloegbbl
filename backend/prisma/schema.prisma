generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Coach {
  id                      Int                       @default(autoincrement()) @id
  name                    String
  externalIds             ExternalCoachId[]
  headCoachTeams          Team[]                    @relation(name: "headCoachTeams")
  coCoachTeams            Team[]                    @relation(name: "coCoachTeams")

  @@map("coach")
}

model ExternalCoachId {
  id                      Int                       @default(autoincrement()) @id
  externalId              String                    @map("external_id")
  externalSystem          String                    @map("external_system")
  coach                   Coach                     @relation(fields: [coachId], references: [id])
  coachId                 Int                       @map("coach_id")

  @@unique([externalId, externalSystem])

  @@map("external_coach_id")
}

model TeamType {
  id                      Int                       @default(autoincrement()) @id
  name                    String
  externalIds             ExternalTeamTypeId[]
  teams                   Team[]

  @@map("team_type")
}

model ExternalTeamTypeId {
  id                      Int                       @default(autoincrement()) @id
  externalId              String                    @map("external_id")
  externalSystem          String                    @map("external_system")
  teamType                TeamType                  @relation(fields: [teamTypeId], references: [id])
  teamTypeId              Int                       @map("team_type_id")

  @@unique([externalId, externalSystem])

  @@map("external_team_type_id")
}

model Team {
  id                      Int                       @default(autoincrement()) @id
  name                    String
  externalIds             ExternalTeamId[]
  headCoach               Coach                     @relation(fields: [headCoachId], references: [id], name: "headCoachTeams")
  headCoachId             Int                       @map("head_coach_id")
  coCoach                 Coach?                    @relation(fields: [coCoachId], references: [id], name: "coCoachTeams")
  coCoachId               Int?                      @map("co_coach_id")
  teamType                TeamType                  @relation(fields: [teamTypeId], references: [id])
  teamTypeId              Int                       @map("team_type_id")
  competitions            TeamInCompetition[]
  matches                 TeamInMatch[]

  @@map("team")
}

model ExternalTeamId {
  id                      Int                       @default(autoincrement()) @id
  externalId              String                    @map("external_id")
  externalSystem          String                    @map("external_system")
  team                    Team                      @relation(fields: [teamId], references: [id])
  teamId                  Int                       @map("team_id")

  @@unique([externalId, externalSystem])

  @@map("external_team_id")
}

model Competition {
  id                      Int                       @default(autoincrement()) @id
  name                    String
  externalIds             ExternalCompetitionId[]
  teams                   TeamInCompetition[]
  matches                 Match[]

  @@map("competition")
}

model ExternalCompetitionId {
  id                      Int                       @default(autoincrement()) @id
  externalId              String                    @map("external_id")
  externalSystem          String                    @map("external_system")
  competition             Competition               @relation(fields: [competitionId], references: [id])
  competitionId           Int                       @map("competition_id")

  @@unique([externalId, externalSystem])

  @@map("external_competition_id")
}

model TeamInCompetition {
  id                      Int                       @default(autoincrement()) @id
  team                    Team                      @relation(fields: [teamId], references: [id])
  teamId                  Int                       @map("team_id")
  competition             Competition               @relation(fields: [competitionId], references: [id])
  competitionId           Int                       @map("competition_id")

  @@unique([teamId, competitionId])

  @@map("team_in_competition")
}

model Match {
  id                      Int                       @default(autoincrement()) @id
  name                    String
  externalIds             ExternalMatchId[]
  competition             Competition               @relation(fields: [competitionId], references: [id])
  competitionId           Int                       @map("competition_id")
  teams                   TeamInMatch[]

  @@map("match")
}

model ExternalMatchId {
  id                      Int                       @default(autoincrement()) @id
  externalId              String                    @map("external_id")
  externalSystem          String                    @map("external_system")
  match                   Match                     @relation(fields: [matchId], references: [id])
  matchId                 Int                       @map("match_id")

  @@unique([externalId, externalSystem])

  @@map("external_match_id")
}

model TeamInMatch {
  id                      Int                       @default(autoincrement()) @id
  team                    Team                      @relation(fields: [teamId], references: [id])
  teamId                  Int                       @map("team_id")
  match                   Match                     @relation(fields: [matchId], references: [id])
  matchId                 Int                       @map("match_id")

  @@unique([teamId, matchId])

  @@map("team_in_match")
}
